{"version":3,"sources":["Components/Navbar/NavBar.js","Constants/Constants.js","axios.js","Components/Banner/Banner.js","Components/RowPost/RowPost.js","url.js","App.js","index.js"],"names":["NavBar","className","src","alt","API_KEY","imageUrl","instance","axios","create","baseURL","Banner","useState","movie","setMovie","useEffect","get","then","response","console","log","data","results","sort","a","b","Math","random","style","backgroundImage","backdrop_path","title","name","overview","Rowpost","props","movies","setMovies","urlId","setUrlId","url","map","obj","onClick","id","length","isSmall","opts","height","width","playerVars","autoplay","videoId","key","originals","action","trend","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAoBeA,MAjBf,WACE,OACE,sBAAKC,UAAU,SAAf,UACE,qBACEA,UAAU,OACVC,IAAI,mHACJC,IAAI,oBAEN,qBACEF,UAAU,UACVC,IAAI,+EACJC,IAAI,gB,uBCbCC,EAAU,mCACVC,EAAW,sCCKTC,E,OAJEC,EAAMC,OAAO,CAC5BC,QDJqB,iC,ME6CRC,MAzCf,WACE,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAbAC,qBAAU,WACRP,EACGQ,IADH,oCACoCX,EADpC,oBAEGY,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,MACrBP,EACEI,EAASG,KAAKC,QAAQC,MAAK,SAAUC,EAAGC,GACtC,MAAO,GAAMC,KAAKC,YACjB,SAGR,IAGD,sBACEC,MAAO,CACLC,gBAAgB,OAAD,OAAShB,EAAQP,EAAWO,EAAMiB,cAAgB,GAAlD,MAEjB5B,UAAU,SAJZ,UAOE,sBAAKA,UAAU,UAAf,UAEE,oBAAIA,UAAU,QAAd,SACGW,EAASA,EAAMkB,MAAQlB,EAAMkB,MAAQlB,EAAMmB,KAAQ,KAEtD,sBAAK9B,UAAU,iBAAf,UACE,wBAAQA,UAAU,SAAlB,kBACA,wBAAQA,UAAU,SAAlB,wBAGF,oBAAIA,UAAU,cAAd,SAA6BW,EAAQA,EAAMoB,SAAW,QAExD,qBAAK/B,UAAU,a,cCgBNgC,MAjDf,SAAiBC,GACf,MAA4BvB,mBAAS,IAArC,mBAAOwB,EAAP,KAAeC,EAAf,KACA,EAAyBzB,mBAAS,IAAlC,mBAAO0B,EAAP,KAAaC,EAAb,KA4BA,OA3BAxB,qBAAU,WACRP,EAAMQ,IAAImB,EAAMK,KAAKvB,MAAK,SAACC,GACzBC,QAAQC,IAAIF,EAASG,MACrBgB,EAAUnB,EAASG,KAAKC,cAEzB,IAuBD,qBAAKpB,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,6BAAKiC,EAAMJ,QACX,qBAAK7B,UAAU,UAAf,SACGkC,EAAOK,KAAI,SAACC,GAAD,OACV,qBAAKC,QAAS,kBAjBHC,EAiBmBF,EAAIE,GAhB1CzB,QAAQC,IAAIwB,QACZpC,EAAMQ,IAAN,gBAAmB4B,EAAnB,2BAAwCvC,EAAxC,oBAAkEY,MAAK,SAAAC,GACjC,IAA/BA,EAASG,KAAKC,QAAQuB,QACzBN,EAASrB,EAASG,KAAKC,QAAQ,OAJjB,IAACsB,GAkBT1C,UAAWiC,EAAMW,QAAU,cAAgB,SAC3C3C,IAAG,UAAKG,EAAWoC,EAAIZ,eACvB1B,IAAI,gBAIRkC,GAAS,cAAC,IAAD,CAASS,KAjCb,CACXC,OAAQ,MACRC,MAAO,OACPC,WAAY,CAEVC,SAAU,IA4BwBC,QAASd,EAAMe,YChD1CC,EAAS,8BAA0BjD,EAA1B,sBACTkD,EAAM,iCAA6BlD,EAA7B,mBACNmD,EAAK,oCAAgCnD,EAAhC,mBCmBHoD,MAff,SAAatB,GACX,OACE,8BACE,+BACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAASK,IAAKc,EAAWvB,MAAM,sBAC/B,cAAC,EAAD,CAASS,IAAKe,EAAQxB,MAAM,SAASe,SAAO,IAC5C,cAAC,EAAD,CAASN,IAAKgB,EAAOzB,MAAM,WAAWe,SAAO,UCVrDY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6e1b2708.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./NavBar.css\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <img\r\n        className=\"logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\"\r\n        alt=\"Nelflix Loading\"\r\n      />\r\n      <img\r\n        className=\"avathar\"\r\n        src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\r\n        alt=\"avathar\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","export const baseUrl = 'https://api.themoviedb.org/3';\r\nexport const API_KEY = 'd36c14323d90ccf547ce17a184dc0f8e';\r\nexport const imageUrl = 'https://image.tmdb.org/t/p/original';\r\n\r\n","import axios from \"axios\";\r\nimport { baseUrl } from \"./Constants/Constants\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: baseUrl,\r\n});\r\n\r\nexport default instance;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../../axios\";\r\nimport { API_KEY, imageUrl } from \"../../Constants/Constants\";\r\nimport \"./Banner.css\";\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`trending/all/week?api_key=${API_KEY}&language=en-US`)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setMovie(\r\n          response.data.results.sort(function (a, b) {\r\n            return 0.5 - Math.random();\r\n          })[0]\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: `url(${movie ? imageUrl + movie.backdrop_path : \"\"})`,\r\n      }}\r\n      className=\"banner\"\r\n    >\r\n      \r\n      <div className=\"content\">\r\n        \r\n        <h1 className=\"title\">\r\n          {movie ? (movie.title ? movie.title : movie.name) : \"\"}\r\n        </h1>\r\n        <div className=\"banner-buttons\">\r\n          <button className=\"button\">Play</button>\r\n          <button className=\"button\">My List</button>\r\n        </div>\r\n\r\n        <h1 className=\"discription\">{movie ? movie.overview : \"\"}</h1>\r\n      </div>\r\n      <div className=\"fade\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport { imageUrl,API_KEY } from \"../../Constants/Constants\";\r\nimport axios from \"../../axios\";\r\nimport \"./RowPost.css\";\r\n\r\n\r\nfunction Rowpost(props) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [urlId,setUrlId] = useState('')\r\n  useEffect(() => {\r\n    axios.get(props.url).then((response) => {\r\n      console.log(response.data);\r\n      setMovies(response.data.results);\r\n    });\r\n  }, []);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleMovie = (id)=>{\r\n    console.log(id)\r\n    axios.get(`movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response=>{\r\n        if(response.data.results.length!==0)\r\n        setUrlId(response.data.results[0])\r\n\r\n    })\r\n\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <h6>{props.title}</h6>\r\n        <div className=\"posters\">\r\n          {movies.map((obj) => (\r\n            <img onClick={()=>handleMovie(obj.id)}\r\n              className={props.isSmall ? \"smallposter\" : \"poster\"}\r\n              src={`${imageUrl + obj.backdrop_path}`}\r\n              alt=\"poster\"\r\n            />\r\n          ))}\r\n        </div>\r\n        { urlId && <YouTube opts={opts} videoId={urlId.key} />  }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rowpost;\r\n","import { API_KEY } from \"./Constants/Constants\";\r\n\r\nexport const originals = `discover/tv?api_key=${API_KEY}&with_networks=213`;\r\nexport const action = `discover/movie?api_key=${API_KEY}&with_genres=28`;\r\nexport const trend = `trending/all/week?api_key=${API_KEY}&language=en-US`;\r\n\r\n","import React from \"react\";\nimport NavBar from \"./Components/Navbar/NavBar\";\nimport \"./App.css\"\nimport Banner from \"./Components/Banner/Banner\";\nimport RowPost from \"./Components/RowPost/RowPost\";\nimport { originals,action,trend} from './url'\n\n\nfunction App(props) {\n  return (\n    <div>\n      <h1>\n        <NavBar />\n        <Banner/>\n        <RowPost url={originals} title='Netflix Originals'  />\n        <RowPost url={action} title='Action' isSmall  />\n        <RowPost url={trend} title='Trending' isSmall  />\n        \n      </h1>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}